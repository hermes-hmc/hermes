# SPDX-FileCopyrightText: 2022 German Aerospace Center (DLR)
#
# SPDX-License-Identifier: Apache-2.0

# SPDX-FileContributor: Michael Meinel

import json
import logging

import toml
import yaml

from hermes import config


_log = logging.getLogger('deposit.invenio')


def config_record_id(ctx):
    deposition_path = ctx.get_cache('deposit', 'deposit')
    with deposition_path.open("r") as deposition_file:
        deposition = json.load(deposition_file)
    conf = config.get('hermes')
    try:
        conf['deposit']['invenio']['record_id'] = deposition['record_id']
        toml.dump(conf, open('hermes.toml', 'w'))
    except KeyError as e:
        raise RuntimeError("No configuration for deposition on Invenio available to store record id") from e


def cff_doi(ctx):
    deposition_path = ctx.get_cache('deposit', 'deposit')
    with deposition_path.open("r") as deposition_file:
        deposition = json.load(deposition_file)
    try:
        cff = yaml.load(open('CITATION.cff', 'r'), yaml.CLoader)
        cff['identifiers'] = [
            {
                'description': "Generated by hermes after deposition.",
                'type': 'doi',
                'value': deposition['doi']
            }
        ]
        yaml.dump(cff, open('CITATION.cff', 'w'))
    except IOError as e:
        raise RuntimeError("No CITATION.cff available.") from e
